@charset "utf-8";
/// Grid system
@mixin make-container($gutter: $grid-gutter-width) {
  width: 100%; //宽度100%
  padding-right: $gutter / 2;
  padding-left: $gutter / 2;
  margin-right: auto;
  margin-left: auto; //水平方向上居中
}

// 媒体查询 定义最大宽度
@mixin make-container-max-widths
($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  //两个参数：最大宽度，断点
  @each $breakpoint, $container-max-width in $max-widths {
    //循环最大宽度的内容
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      //传入 sm md lg xl ,断点
      //得到 576px 768px 992px 1200px的媒体查询
      max-width: $container-max-width;
      //设置宽度值 540px 720px 960px 1140px
    }
  }
}

@mixin make-row($gutter: $grid-gutter-width) {
  //传入列间距
  display: flex;
  flex-wrap: wrap;
  margin-right: -$gutter / 2;
  margin-left: -$gutter / 2;
  //两边扩展开，抵消掉容器的内边距
}

@mixin make-col-ready($gutter: $grid-gutter-width) {
  position: relative;
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we use `flex` values
  // later on to override this initial width.
  width: 100%;
  padding-right: $gutter / 2;
  padding-left: $gutter / 2;
}

@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size / $columns);
  max-width: percentage($size / $columns);
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: $size / $columns;
  margin-left: if($num == 0, 0, percentage($num));
}
